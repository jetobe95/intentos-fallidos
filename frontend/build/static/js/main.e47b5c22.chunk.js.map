{"version":3,"sources":["services/auth.js","components/Login.js","components/Register.js","components/Home.js","App-router.js","serviceWorker.js","index.js"],"names":["axios","Axios","create","baseURL","interceptors","response","use","data","Auth","email","password","body","post","console","log","_context","t0","_context2","useStyles","makeStyles","theme","@global","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","Login","_callee2","_ref","auth","regenerator_default","a","wrap","prev","next","login","sent","abrupt","stop","SignIn","props","_useState","useState","_useState2","Object","slicedToArray","setResponse","classes","_onSubmit","asyncToGenerator","mark","_callee","event","preventDefault","FormData","target","get","apply","this","arguments","success","react_default","createElement","react_router","to","Slide","in","direction","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlined_default","Typography","variant","Box","message","onSubmit","_x2","TextField","type","required","fullWidth","id","label","name","autoComplete","autoFocus","Button","color","Grid","container","item","react_router_dom","mt","Snackbar","anchorOrigin","vertical","horizontal","open","lock","onClose","objectSpread","autoHideDuration","ContentProps","aria-describedby","Register","register","SignUp","_React$useState","React","_React$useState2","SetResponse","xs","justify","MadeWithLove","align","Link","href","icon","marginRight","heroContent","background","padding","heroButtons","cardGrid","paddingTop","paddingBottom","card","height","cardMedia","cardContent","flexGrow","footer","cards","Album","Fragment","AppBar","position","Toolbar","PhotoCamera_default","noWrap","gutterBottom","paragraph","map","key","sm","md","Card","CardMedia","image","title","CardContent","CardActions","size","AppRoute","params","path","exact","LoginScreen","Home","Boolean","window","location","hostname","match","process","ReactDOM","render","App_router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e47b5c22.chunk.js","sourcesContent":["import Axios from 'axios';\nconst axios = Axios.create({\n    baseURL: 'http://localhost:4000/api',\n})\naxios.interceptors.response.use(function (response) {\n    return response.data\n})\n\nclass Auth {\n    async login({ email, password }) {\n        try {\n            const body = {\n                email,\n                password\n            }\n            const response = await axios.post('/login',body)\n            return response\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    async register({ email, password }) {\n        try {\n            const body = {\n                email,\n                password\n            }\n            const response = await axios.post('/register',body)\n            return response\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nexport default Auth;","import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as LinkReact, Redirect } from 'react-router-dom'\nimport Auth from '../services/auth'\nimport Slide from '@material-ui/core/Slide';\nimport Snackbar from '@material-ui/core/Snackbar';\n\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\nasync function Login({ email, password }) {\n  const auth = new Auth()\n  const response = await auth.login({ email, password })\n  return response;\n}\n\nexport default function SignIn(props) {\n  const [response, setResponse] = useState({})\n  const classes = useStyles();\n  async function onSubmit(event) {\n    event.preventDefault()\n    const form = new FormData(event.target)\n    const email = form.get('email')\n    const password = form.get('password')\n\n    const response = await Login({ email, password });\n    if(response){\n      setResponse(response)\n    }\n\n  }\n  if (response.success) {\n    return <Redirect to=\"/home\" />\n  }\n  return (\n    <Slide in direction=\"up\">\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Iniciar Sesión\n        </Typography>\n          <Box>\n            {response.success ? null : (response.message)}\n          </Box>\n          <form className={classes.form} onSubmit={onSubmit}>\n            <TextField\n              type=\"email\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Correo electrónico\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Contaseña\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Iniciar sesión\n          </Button>\n            <Grid container>\n              <Grid item>\n                <LinkReact to=\"/register\">\n                  {\"No tienes una cuenta? Registrate\"}\n                </LinkReact>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        <Box mt={5}>\n\n        </Box>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={response.lock}\n          onClose={() => setResponse({ ...response, lock: false })}\n\n          autoHideDuration={3000}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{response.message}</span>}\n        />\n      </Container>\n    </Slide>\n  );\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as LinkReact, Redirect } from 'react-router-dom'\nimport Auth from '../services/auth'\n\n\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nasync function Register({ email, password }) {\n  const auth = new Auth()\n  const response = await auth.register({ email, password })\n  return response;\n}\nexport default function SignUp() {\n  const classes = useStyles();\n  const [response, SetResponse] = React.useState({ success: false, message: '' })\n\n  async function onSubmit(event) {\n    event.preventDefault()\n    const form = new FormData(event.target)\n    const email = form.get('email')\n    const password = form.get('password')\n    const response = await Register({ email, password });\n    if(response){\n      SetResponse(response)\n    }\n\n\n  }\n  if (response.success) {\n    return <Redirect to=\"/home\" />\n  }\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Registro\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                type=\"email\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Contraseña\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Registrate\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <LinkReact to=\"/\">\n                Ya tiene una cuenta ? Inicia sesión\n              </LinkReact>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n\n    </Container>\n  );\n}","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport {Link as LinkReact} from 'react-router-dom'\n\nfunction MadeWithLove() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Built with love by the '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Material-UI\n      </Link>\n      {' team.'}\n    </Typography>\n  );\n}\nconst useStyles = makeStyles(theme => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Album() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <CameraIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Reto Login\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              Bienvenido\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Something short and leading about the collection below—its contents, the creator, etc.\n              Make it short and sweet, but not too short so folks don&apos;t simply skip over it\n              entirely.\n            </Typography>\n            <div className={classes.heroButtons}>\n              <Grid container spacing={2} justify=\"center\">\n                <Grid item>\n                    <LinkReact to=\"/\">\n                        <Button variant=\"contained\" color=\"primary\" >\n                        Cerrar sesión\n                        </Button>\n                    </LinkReact>\n                </Grid>\n              </Grid>\n            </div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={4}>\n            {cards.map(card => (\n              <Grid item key={card} xs={12} sm={6} md={4}>\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Heading\n                    </Typography>\n                    <Typography>\n                      This is a media card. You can use this section to describe the content.\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button size=\"small\" color=\"primary\">\n                      View\n                    </Button>\n                    <Button size=\"small\" color=\"primary\">\n                      Edit\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Footer\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Something here to give the footer a purpose!\n        </Typography>\n        <MadeWithLove />\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport LoginScreen from './components/Login'\nimport Register from './components/Register'\nimport Home from './components/Home'\nfunction AppRoute(params) {\n    return (\n        <Router>\n            <Route path=\"/\" exact component={LoginScreen} />\n            <Route path=\"/home\" exact component={Home} />\n            <Route path=\"/register/\"  exact component={Register} />\n           \n        </Router>\n    )\n}\nexport default AppRoute","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './App-router';\nimport * as serviceWorker from './serviceWorker';\nconsole.log('Variables',process.env);\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}